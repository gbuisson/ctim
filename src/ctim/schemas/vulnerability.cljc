(ns ctim.schemas.vulnerability
  (:require #?(:clj  [flanders.core :as f :refer [def-entity-type def-map-type def-eq]]
               :cljs [flanders.core :as f :refer-macros [def-entity-type def-map-type def-eq]])
            [ctim.schemas.common :as c]
            [ctim.schemas.vocabularies :as v]))

(def type-identifier "vulnerability")

(def-eq VulnerabilityTypeIdentifier type-identifier
  :description "The fixed value \"vulnerability\"")

(def vulnerability-desc
  "a mistake in software that can be directly used by a hacker to gain access to a system or network")

(def vulnerability-desc-link
  "[Vulnerability](http://docs.oasis-open.org/cti/stix/v2.0/cs01/part2-stix-objects/stix-v2.0-cs01-part2-stix-objects.html#_Toc496714334)")

(def-entity-type Vulnerability
  {:description vulnerability-desc
   :reference vulnerability-desc-link}
  c/base-entity-entries
  c/describable-entity-entries
  c/sourcable-object-entries
  (f/required-entries
   (f/entry :type VulnerabilityTypeIdentifier
            :description (str "The fixed value " type-identifier))
   (f/entry :description c/Markdown
            :description
            (str "A description that provides more details and context about the Vulnerability,"
                 "potentially including its purpose and its key characteristics.")))
  (f/optional-entries
   (f/entry :name c/ShortString
            :description "A name used to identify the Vulnerability.")))

(def-entity-type NewVulnerability
  "For submitting a new vulnerability"
  (:entries Vulnerability)
  c/base-new-entity-entries
  (f/optional-entries
   (f/entry :type VulnerabilityTypeIdentifier)))

(def-entity-type StoredVulnerability
  "A vulnerability as stored in the data store"
  (:entries Vulnerability)
  c/base-stored-entity-entries)

(def VulnerabilityRef
  (c/ref-for-type type-identifier))
